version: "3"

services:
  nginx:    
    build: ./nginx/  
    container_name: nginx-container
    restart: always
    ports:  
      - ${HOST_PORT}:80  
    links:  
      - php  
    volumes_from:  
      - php
    depends_on:
      - php

  php:    
    build:
      context: ./php/
      args:
        user: ${HOST_USER} # your username (echo $USER)
        uid: ${HOST_UID} # your uid (id -u)
        php_version: ${PHP_VERSION}
    container_name: php-container
    restart: always
    expose:  
      - 9000  
    links:  
      - mysql
    working_dir: /var/www/html/
    volumes_from:  
      - util
    depends_on:
      - util

  util:    
    build:
      context: ./php/
      args:
        user: ${HOST_USER} # your username (echo $USER)
        uid: ${HOST_UID} # your uid (id -u)
        php_version: ${PHP_VERSION}
    container_name: util-container
    restart: always
    expose:  
      - 9000  
    links:  
      - mysql
    working_dir: /var/www/html/
    command: >
      sh -c "composer install &&
             php artisan cache:clear &&
             php artisan event:clear &&
             php artisan config:clear &&
             php artisan view:clear &&
             php artisan route:clear &&
             php artisan storage:link &&
             php artisan queue:listen > /var/www/html/storage/logs/queue.log
             "
    volumes:  
      - ${WORK_DIR}:/var/www/html/
    depends_on:
      - mysql

  node:    
    image: node:${NODE_VERSION}
    container_name: node-container
    restart: always
    command: >
      sh -c "echo fs.inotify.max_user_instances=524288 && sysctl -p && 
             npm install &&
             npm run watch -s"
    working_dir: /var/www/html
    volumes:  
      - ${WORK_DIR}:/var/www/html/

  mysql:    
    image: mysql:${MYSQL_VERSION}  
    container_name: mysql-container
    restart: always
    volumes:
      - volume_mysql:/var/lib/mysql
      - ${SQL_DUMP_FILE}:/docker-entrypoint-initdb.d/dump.sql
    ports:
      - ${MYSQL_PORT}:3306
    environment:  
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}  
      MYSQL_USER: ${MYSQL_USER}  
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  mailhog: # https://aregsar.com/blog/2020/laravel-app-with-mail-server-in-docker/
    image: mailhog/mailhog:latest
    container_name: mailhog-container
    environment:
      - MH_STORAGE=maildir
      - MH_MAILDIR_PATH=maildir
    restart: always
    volumes:
      - volume_mailhog:/maildir
    ports:
      - "8003:1025"
      - ${MAILHOG_PORT}:8025 # http://127.0.0.1:8100/

  ngrok:
    image: shkoliar/ngrok:latest
    container_name: ngrok-container
    restart: always
    ports:
      - ${NGROK_PORT}:4551 # http://127.0.0.1:4551
    links:
      - nginx
    environment:
      - DOMAIN=nginx
      - PORT=80
      - AUTH_TOKEN=${NGROK_AUTH_TOKEN}

volumes:
  volume_mailhog:
  volume_mysql: